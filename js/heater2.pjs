color[][] grid = new color[7][30];

void blendAll() {
	for (int i=0;i<7;i++) {
		for (int j=0;j<30;j++) {
			if (grid[i-1][j-1]) grid[i][j] = blendColor(grid[i][j],grid[i-1][j-1],BLEND);
			if (grid[i][j-1]) grid[i][j] = blendColor(grid[i][j],grid[i][j-1],BLEND);
			if (grid[i+1][j-1]) grid[i][j] = blendColor(grid[i][j],grid[i+1][j-1],BLEND);
			if (grid[i-1][j]) grid[i][j] = blendColor(grid[i][j],grid[i-1][j],BLEND);
			if (grid[i+1][j]) grid[i][j] = blendColor(grid[i][j],grid[i+1][j],BLEND);
			if (grid[i-1][j+1]) grid[i][j] = blendColor(grid[i][j],grid[i-1][j+1],BLEND);
			if (grid[i][j+1]) grid[i][j] = blendColor(grid[i][j],grid[i][j+1],BLEND);
			if (grid[i+1][j+1]) grid[i][j] = blendColor(grid[i][j],grid[i+1][j+1],BLEND);
		}
	}
}

void drawSquares() {
	noStroke();
	for (int i=0;i<7;i++) {
		for (int j=0;j<30;j++) {
			fill(grid[i][j]);
			rect(j*sideLength,i*sideLength,sideLength,sideLength);
		}
	}
}

void setup() {
	for (int i=0;i<7;i++) {
		for (int j=0;j<30;j++) {
			grid[i][j] = color(255,42,42);
		}
	}
}

void draw() {

}
